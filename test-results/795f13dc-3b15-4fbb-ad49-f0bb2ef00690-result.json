{"name": "test_remove_contact_from_group", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: [id=\"987\"]", "trace": "app = <fixture.application.Application object at 0x04037990>\ndb = <fixture.db.DbFixture object at 0x04037810>\norm = <fixture.orm.ORMFixture object at 0x0408A2D0>, check_ui = False\n\n    def test_remove_contact_from_group(app, db, orm, check_ui):\n        with allure.step(\"If there are no groups create one\"):\n            if app.group.count() == 0:\n                new_group = Group(name=\"Group for removing contacts\")\n                app.group.create(new_group)\n        with allure.step(\"If there are no contacts create one\"):\n            if app.contact.count() == 0:\n                new_contact = Contact(first_name=\"Contact for removing\")\n                app.contact.create(new_contact)\n        with allure.step(\"If there are no groups with contacts add a contact to a group\"):\n            groups = orm.get_not_empty_group_list()\n            if len(groups)== 0:\n                group = random.choice(orm.get_group_list())\n                contact = random.choice(orm.get_contacts_not_in_group(group))\n                app.contact.add_to_group(contact, group)\n                groups = orm.get_not_empty_group_list()\n        with allure.step(\"Given a non-empty list of contacts in the group\"):\n            group = random.choice(groups)\n            old_contacts_in_group = orm.get_contacts_in_group(group)\n        with allure.step(\"When removing a contact from a group\"):\n            contact_to_remove = random.choice(old_contacts_in_group)\n>           app.contact.remove_from_group(contact_to_remove, group)\n\ntest\\test_remove_contact_from_group.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nfixture\\contact.py:261: in remove_from_group\n    self.select_by_id(contact.id)\nfixture\\contact.py:52: in select_by_id\n    wd.find_element_by_id(id).click()\nenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:360: in find_element_by_id\n    return self.find_element(by=By.ID, value=id_)\nenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:978: in find_element\n    'value': value})['value']\nenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0404E8F0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"Unable to locate element: [id=\\\\\"987\\\\\"]\",\"st...ror@chrome://marionette/content/error.js:389:5\\\\nelement.find/</<@chrome://marionette/content/element.js:339:16\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: [id=\"987\"]\n\nenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: NoSuchElementException"}, "steps": [{"name": "If there are no groups create one", "status": "passed", "start": 1555623136163, "stop": 1555623139752}, {"name": "If there are no contacts create one", "status": "passed", "start": 1555623139752, "stop": 1555623139826}, {"name": "If there are no groups with contacts add a contact to a group", "status": "passed", "start": 1555623139827, "stop": 1555623139830}, {"name": "Given a non-empty list of contacts in the group", "status": "passed", "start": 1555623139831, "stop": 1555623139832}, {"name": "When removing a contact from a group", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: [id=\"987\"]\n\n", "trace": "  File \"C:\\Users\\ul1t0\\PycharmProjects\\python_B2\\test\\test_remove_contact_from_group.py\", line 28, in test_remove_contact_from_group\n    app.contact.remove_from_group(contact_to_remove, group)\n  File \"C:\\Users\\ul1t0\\PycharmProjects\\python_B2\\fixture\\contact.py\", line 261, in remove_from_group\n    self.select_by_id(contact.id)\n  File \"C:\\Users\\ul1t0\\PycharmProjects\\python_B2\\fixture\\contact.py\", line 52, in select_by_id\n    wd.find_element_by_id(id).click()\n  File \"c:\\users\\ul1t0\\pycharmprojects\\python_b2\\env\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 360, in find_element_by_id\n    return self.find_element(by=By.ID, value=id_)\n  File \"c:\\users\\ul1t0\\pycharmprojects\\python_b2\\env\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 978, in find_element\n    'value': value})['value']\n  File \"c:\\users\\ul1t0\\pycharmprojects\\python_b2\\env\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 321, in execute\n    self.error_handler.check_response(response)\n  File \"c:\\users\\ul1t0\\pycharmprojects\\python_b2\\env\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 242, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1555623139832, "stop": 1555623143160}], "attachments": [{"name": "log", "source": "5ca03b10-5896-4d2c-8661-5368ded5ec5a-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "5c83050e-2e07-496b-8fdc-c0991b31d7da-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "bdc0e4f7-73ec-4a9f-98c4-2a9a799a278a-attachment.txt", "type": "text/plain"}], "start": 1555623136162, "stop": 1555623143162, "uuid": "3f4642bf-8471-48fe-a858-87e92ac6f84f", "historyId": "08c85d9cdad5e6e31c176035f8d76747", "fullName": "test.test_remove_contact_from_group#test_remove_contact_from_group", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_remove_contact_from_group"}, {"name": "host", "value": "LAPTOP-P40BCFDO"}, {"name": "thread", "value": "16388-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_remove_contact_from_group"}]}